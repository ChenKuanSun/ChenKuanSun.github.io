{"title":"AWS Lambda 除錯小技巧-Python","date":"2019-07-25T17:30:25.000Z","date_formatted":{"ll":"Jul 26, 2019","L":"07/26/2019","MM-DD":"07-26"},"thumbnail":"https://miro.medium.com/max/700/0*YGwj6hSUumVQZqPb.png","link":"2019/07/26/AWS_Serverless_05","comments":true,"tags":["Amazon Web Services","Lambda","Serverless"],"categories":["Amazon Web Services"],"updated":"2020-04-13T23:55:01.574Z","content":"<p>常常在Lambda莫名其妙502，找Log開Test除錯又超級麻煩嗎?<br>可以試試用Python的Class-based Decorator及Try Except結合，直接把Traceback傳回來。</p>\n<h2 id=\"lets-start-coding\">Let’s Start Coding<a href=\"#lets-start-coding\" title=\"Let’s Start Coding\"></a></h2><p>可以包一個Library到Layer裡面，定義一個Class-based Decorator，</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> traceback</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">developer_mode</span><span class=\"params\">(object)</span>:</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">__init__</span><span class=\"params\">(self, status=False)</span>:</span></span><br><span class=\"line\">    self.status = status</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">__call__</span><span class=\"params\">(self, func)</span>:</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">wrapper</span><span class=\"params\">(*args, **kwargs)</span>:</span></span><br><span class=\"line\">      <span class=\"keyword\">if</span> self.status:</span><br><span class=\"line\">        <span class=\"keyword\">try</span>:</span><br><span class=\"line\">          response = func(*args, **kwargs)</span><br><span class=\"line\">        <span class=\"keyword\">except</span> Exception:</span><br><span class=\"line\">          response = &#123;</span><br><span class=\"line\">            <span class=\"comment\"># (option) Define your statusCode like 5xx \\</span></span><br><span class=\"line\">            <span class=\"comment\"># link to API Gate Way</span></span><br><span class=\"line\">            <span class=\"string\">\"statusCode\"</span>: <span class=\"number\">200</span>,</span><br><span class=\"line\">            <span class=\"comment\"># (option) Define your body as you need</span></span><br><span class=\"line\">            <span class=\"string\">\"body\"</span>: json.dumps(traceback.format_exc().split(<span class=\"string\">'\\n'</span>)),</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        <span class=\"keyword\">finally</span>:</span><br><span class=\"line\">          <span class=\"keyword\">return</span> response</span><br><span class=\"line\">      <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> func(*args, **kwargs)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> wrapper</span><br></pre></td></tr></table></figure><p>之後在Lambda前面加就可以做Debug</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#Set True to enabling Developer_mode  </span></span><br><span class=\"line\"><span class=\"comment\">#leave as default like developer_mode() or developer_mode(False) </span></span><br><span class=\"line\"><span class=\"comment\">#to disable developer mode</span></span><br><span class=\"line\"><span class=\"meta\">@developer_mode(True)</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">lambda_handler</span><span class=\"params\">(event, context)</span>:</span></span><br></pre></td></tr></table></figure><p>後續如果有更多的小技巧就會繼續分享。</p>\n<p>如果本篇文章有幫到你的忙，<br>選單的<a href=\"https://www.paypal.me/ChenKuanSun\" target=\"_blank\">Donate</a>可以請我喝一杯英式紅茶拿鐵，<br>讓我有更多的咖啡因(X)</p>\n","prev":{"title":"AWS Serverless 實作 — 下","link":"2019/07/26/AWS_Serverless_04"},"next":{"title":"AWS Serverless 實作 — 上","link":"2019/07/24/AWS_Serverless_03"},"plink":"https://chenkuansun.github.io/2019/07/26/AWS_Serverless_05/","toc":[{"id":"lets-start-coding","title":"Let’s Start Coding","index":"1"}]}